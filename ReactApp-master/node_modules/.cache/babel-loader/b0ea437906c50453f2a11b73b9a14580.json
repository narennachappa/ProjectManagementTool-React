{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CALL_FIRESTORE = undefined;\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = reduxFirestoreMiddleware;\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction callFirestore(firebaseInstance, callInfoObj) {\n  var method = callInfoObj.method;\n  var modelArgs = callInfoObj.modelArgs,\n      methodArgs = callInfoObj.methodArgs;\n  if (!(0, _isArray3.default)(modelArgs)) modelArgs = [modelArgs];\n  if (!(0, _isArray3.default)(methodArgs)) methodArgs = [methodArgs];\n\n  if (!firebaseInstance || !firebaseInstance.firestore) {\n    throw new Error('firestore is not a Firebase namespace');\n  }\n\n  return !methodArgs ? firebaseInstance.firestore()[method] : firebaseInstance.firestore()[method].apply(firebaseInstance, methodArgs);\n}\n\nvar CALL_FIRESTORE = exports.CALL_FIRESTORE = 'CALL_FIRESTORE';\nvar typesMap = {\n  get: [_constants.actionTypes.GET_REQUEST, _constants.actionTypes.GET_SUCCESS, _constants.actionTypes.GET_FAILURE]\n};\n\nfunction reduxFirestoreMiddleware(firestore) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var callAPI = action.type === CALL_FIRESTORE ? action : undefined;\n        if (typeof callAPI === 'undefined') return next(action);\n        var method = callAPI.method;\n        if (typeof method === 'function') method = method(store.getState());\n        if (typeof method !== 'string') throw new Error('Specify a method.');\n        var args = callAPI.args;\n        var types = typesMap[method];\n\n        if (!Array.isArray(types) || types.length !== 3) {\n          throw new Error('Expected an array of three action types.');\n        }\n\n        if (!types.every(function (type) {\n          return typeof type === 'string';\n        })) {\n          throw new Error('Expected action types to be strings.');\n        }\n\n        function actionWith(data) {\n          var finalAction = _extends({}, action, data);\n\n          delete finalAction[CALL_FIRESTORE];\n          return finalAction;\n        }\n\n        var _types = _slicedToArray(types, 3),\n            requestType = _types[0],\n            successType = _types[1],\n            failureType = _types[2];\n\n        next({\n          type: requestType\n        });\n        var callInfoObj = {\n          method: method\n        };\n        return callFirestore(firestore, callInfoObj).then(function (response) {\n          return next({\n            response: response,\n            method: method,\n            args: args,\n            type: successType\n          });\n        }).catch(function (error) {\n          return next(actionWith({\n            type: failureType,\n            error: error.message || error || 'Something bad happened'\n          }));\n        });\n      };\n    };\n  };\n}","map":{"version":3,"sources":["C:/Users/naren/Desktop/ReactApp-master/ReactApp-master/node_modules/redux-firestore/es/middleware.js"],"names":["Object","defineProperty","exports","value","CALL_FIRESTORE","undefined","_isArray2","require","_isArray3","_interopRequireDefault","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","default","reduxFirestoreMiddleware","_constants","obj","__esModule","callFirestore","firebaseInstance","callInfoObj","method","modelArgs","methodArgs","firestore","Error","apply","typesMap","get","actionTypes","GET_REQUEST","GET_SUCCESS","GET_FAILURE","store","action","callAPI","type","getState","args","types","every","actionWith","data","finalAction","_types","requestType","successType","failureType","then","response","catch","error","message"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CALL_FIRESTORE = undefined;\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = reduxFirestoreMiddleware;\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction callFirestore(firebaseInstance, callInfoObj) {\n  var method = callInfoObj.method;\n  var modelArgs = callInfoObj.modelArgs,\n      methodArgs = callInfoObj.methodArgs;\n\n  if (!(0, _isArray3.default)(modelArgs)) modelArgs = [modelArgs];\n  if (!(0, _isArray3.default)(methodArgs)) methodArgs = [methodArgs];\n  if (!firebaseInstance || !firebaseInstance.firestore) {\n    throw new Error('firestore is not a Firebase namespace');\n  }\n\n  return !methodArgs ? firebaseInstance.firestore()[method] : firebaseInstance.firestore()[method].apply(firebaseInstance, methodArgs);\n}\n\nvar CALL_FIRESTORE = exports.CALL_FIRESTORE = 'CALL_FIRESTORE';\n\nvar typesMap = {\n  get: [_constants.actionTypes.GET_REQUEST, _constants.actionTypes.GET_SUCCESS, _constants.actionTypes.GET_FAILURE]\n};\n\nfunction reduxFirestoreMiddleware(firestore) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var callAPI = action.type === CALL_FIRESTORE ? action : undefined;\n        if (typeof callAPI === 'undefined') return next(action);\n\n        var method = callAPI.method;\n\n\n        if (typeof method === 'function') method = method(store.getState());\n\n        if (typeof method !== 'string') throw new Error('Specify a method.');\n\n        var args = callAPI.args;\n\n        var types = typesMap[method];\n\n        if (!Array.isArray(types) || types.length !== 3) {\n          throw new Error('Expected an array of three action types.');\n        }\n\n        if (!types.every(function (type) {\n          return typeof type === 'string';\n        })) {\n          throw new Error('Expected action types to be strings.');\n        }\n\n        function actionWith(data) {\n          var finalAction = _extends({}, action, data);\n          delete finalAction[CALL_FIRESTORE];\n          return finalAction;\n        }\n\n        var _types = _slicedToArray(types, 3),\n            requestType = _types[0],\n            successType = _types[1],\n            failureType = _types[2];\n\n        next({ type: requestType });\n        var callInfoObj = { method: method };\n        return callFirestore(firestore, callInfoObj).then(function (response) {\n          return next({ response: response, method: method, args: args, type: successType });\n        }).catch(function (error) {\n          return next(actionWith({\n            type: failureType,\n            error: error.message || error || 'Something bad happened'\n          }));\n        });\n      };\n    };\n  };\n}"]},"metadata":{},"sourceType":"script"}